# Generated by GNU Make 4.2.1. Do not edit.

# CACHE_REQUIRES:
#   mk/.cache/mk/mk_mybuild.mk
# CACHE_INCLUDES:
#   mk/ugly.mk
# MAKEFILE_LIST:
#   mk/.cache/mk/mk_mybuild.mk
#   mk/core/common.mk
#   mk/.cache/mk/mk_mybuild_myfile.mk
#   mk/.cache/mk/mk_gold_engine.mk
#   mk/.cache/mk/mk_core_def.mk
#   mk/core/alloc.mk
#   mk/core/common.mk
#   mk/core/define.mk
#   mk/core/string.mk
#   mk/util/var/assign.mk
#   mk/util/var/info.mk
#   mk/gold/engine.mk
#   mk/.cache/mk/mk_model.mk
#   mk/.cache/mk/mk_core_obj.mk
#   mk/core/object.mk
#   mk/model/issue.mk
#   mk/model/linkage.mk
#   mk/model/metamodel.mk
#   mk/model/metamodel_impl.mk
#   mk/model/model.mk
#   mk/model/model_impl.mk
#   mk/model/resource.mk
#   mk/mybuild/common-resource.mk
#   mk/mybuild/common-rules.mk
#   mk/mybuild/common-symbols.mk
#   mk/mybuild/myfile-linker.mk
#   mk/mybuild/myfile-metamodel.mk
#   mk/mybuild/myfile-model.mk
#   mk/mybuild/myfile-parser.mk
#   mk/mybuild/myfile-resource.mk
#   mk/mybuild/myfile-rules.mk
#   mk/mybuild/myfile-symbols.mk
#   mk/mybuild/myfile-tables.mk
#   mk/.cache/mk/mk_mybuild_configfile.mk
#   mk/mybuild/configfile-linker.mk
#   mk/mybuild/configfile-metamodel.mk
#   mk/mybuild/configfile-model.mk
#   mk/mybuild/configfile-parser.mk
#   mk/mybuild/configfile-resource.mk
#   mk/mybuild/configfile-rules.mk
#   mk/mybuild/configfile-symbols.mk
#   mk/mybuild/configfile-tables.mk
#   mk/.cache/mk/mk_mybuild_build.mk
#   mk/mybuild/build-metamodel.mk
#   mk/mybuild/build-model.mk
#   mk/mybuild/mybuild.mk
#   mk/ugly.mk

ifneq ($(word 2,$(filter mk/.cache/mk/mk_ugly.mk,$(MAKEFILE_LIST))),)
$(error Multiple inclusion of 'mk/.cache/mk/mk_ugly.mk')
endif

include $(filter-out $(MAKEFILE_LIST),mk/core/common.mk)
include $(filter-out $(MAKEFILE_LIST),mk/.cache/mk/mk_mybuild.mk)

# List of newly cached makefiles.
MAKEFILE_LIST += \
	mk/ugly.mk

# Transient variables.
__cache_transient := __def_tmp__ __def_inline_tmp__ __argsplit_tmp__ __argfold_tmp__ __def_tmp__ __def_inline_tmp__ __argsplit_tmp__ __argfold_tmp__

# Volatiles variables.
__alloc_cnt_u-def_aux := \
	.3
__def_done += \
	filter_static_modules \
	module_build_fqn2inst \
	__module_header_h_template \
	topsort \
	__header_mod \
	_topsort_error_fatal \
	__header_mod_name \
	__header_gen \
	filter_static_reacheables \
	__module_config_h_template \
	__inherited_option_id \
	module_get_files \
	module_get_headers
__def_simples += \
	__mk_ugly_mk \
	__cache_volatile_variable___alloc_cnt_i-def_aux \
	__alloc_cnt_i-def_aux

# New variables.
__def_aux1u = $(subst $(\n),\n,$(call __header_template,$(call __header_mod,$1),$1))
__def_aux2u = $(if $1,$(foreach op,$1,$(foreach optionId,$(call __inherited_option_id,$(foreach __this,$(suffix $(op)),$(call $($(__this)).option.getter)),$t),$(\n)$(\h)ifndef $(optionId)$(\n)$(\h)define $(optionId) $(foreach __this,$(suffix $(foreach __this,$(suffix $(op)),$(call $($(__this)).value.getter))),$(call $($(__this)).toString,))$(\n)$(\h)endif$(\n))),// (no config options)$(\n))
__def_aux3u = $(if $2,$(foreach superType,$2,$(foreach superName,$(foreach __this,$(suffix $(superType)),$(call $($(__this)).name.getter)),$(foreach superId,$(foreach __this,$(suffix $(superType)),$(call $($(__this)).getId,)),$(foreach optionId,$(call __inherited_option_id,$(superType),$t),$(\n)$(\h)ifndef $(superId)$(\n)$(\h)define $(superId) \$(\n)$(\t)$(\t)$(optionId)$(\n)$(\h)endif$(\n))))))
filter_static_modules = $(call topsort,$(strip $(foreach m,$1,$(if $(foreach __this,$(suffix $(foreach __this,$(suffix $(m)),$(call $($(__this)).type.getter))),$(call $($(__this)).isStatic.getter)),$m))),filter_static_reacheables)
filter_static_reacheables = $(foreach __this,$(suffix $1),$(call $($(__this)).depends.getter))
__header_gen = $(call __def_aux1u,$(__header_mod_name))
__header_mod = module_build_fqn2inst
__header_mod_name = $(strip$(subst /,.,$(patsubst $(abspath $(SRCGEN_DIR))/include/module/%.h,%,$(abspath $1))))
__inherited_option_id = $(subst $(subst .,__,$(foreach __this,$(suffix $(foreach __this,$(suffix $(1)),$(call $($(__this)).eContainerOfType,$(EModel_ENamedObject)))),$(call $($(__this)).qualifiedName.getter))),$(subst .,__,$(foreach __this,$(suffix $(2)),$(call $($(__this)).qualifiedName.getter))),$(foreach __this,$(suffix $(1)),$(call $($(__this)).getId,)))
__mk_ugly_mk := 1
module_build_fqn2inst = $(call map-get,$(build_model),moduleInstanceByName,$1)
__module_config_h_template = /* $(GEN_BANNER) */$(\n)$(foreach n,$(subst .,__,$(foreach __this,$(suffix $(2)),$(call $($(__this)).qualifiedName.getter))),$(foreach t,$(foreach __this,$(suffix $(1)),$(call $($(__this)).type.getter)),$(\n)$(\h)ifndef __CONFIG__$n__H_$(\n)$(\h)define __CONFIG__$n__H_$(\n)$(if $(call eq,$(suffix $t),$(suffix $2)),// This is the most specific implementation type$(\n)$(call __def_aux2u,$(strip $(foreach __this,$(suffix $(1)),$(call $($(__this)).options.getter))),$2)$(foreach 2,$(filter-out %$(suffix $t),$(foreach __this,$(suffix $(t)),$(call $($(__this)).allSuperTypes.getter))),$(call __def_aux3u,$(strip $(foreach __this,$(suffix $(1)),$(call $($(__this)).options.getter))),$(strip $(foreach __this,$(suffix $(2)),$(call $($(__this)).allOptions.getter))))),// This is a base type of $(foreach __this,$(suffix $(t)),$(call $($(__this)).qualifiedName.getter))$(\n)$(\h)include <config/$(subst .,/,$(foreach __this,$(suffix $(t)),$(call $($(__this)).qualifiedName.getter))).h>$(\n))$(\n)$(\h)endif /* __CONFIG__$n__H_ */$(\n)))
module_get_files = $(foreach s,$(foreach __this,$(suffix $(1)),$(call $($(__this)).sources.getter)),$(foreach __this,$(suffix $(s)),$(call $($(__this)).fileFullName.getter)))
module_get_headers = $(patsubst $(abspath $(ROOT_DIR))/%,%, $(abspath $(filter %.h,$(module_get_files))))
__module_header_h_template = /* $(GEN_BANNER) */$(\n)$(foreach n,$(subst .,__,$(foreach __this,$(suffix $(2)),$(call $($(__this)).qualifiedName.getter))),$(foreach t,$(foreach __this,$(suffix $(1)),$(call $($(__this)).type.getter)),$(\n)$(\h)ifndef __MODULE__$n__H_$(\n)$(\h)define __MODULE__$n__H_$(\n)$(\n)$(if $(call eq,$(suffix $t),$(suffix $2)),// This is the most specific implementation type$(\n)$(\h)include <config/$(subst .,/,$(foreach __this,$(suffix $(t)),$(call $($(__this)).qualifiedName.getter))).h>$(\n)$(foreach impl,$t $(foreach __this,$(suffix $(t)),$(call $($(__this)).allSuperTypes.getter)),$(\n)// $(foreach __this,$(suffix $(impl)),$(call $($(__this)).qualifiedName.getter))$(\n)$(or $(foreach header,$(call module_get_headers,$(impl)),$(\h)include <../../$(header)>$(\n)),// (no headers to include)$(\n))),// This is a base type of $(foreach __this,$(suffix $(t)),$(call $($(__this)).qualifiedName.getter))$(\n)$(\h)include <module/$(subst .,/,$(foreach __this,$(suffix $(t)),$(call $($(__this)).qualifiedName.getter))).h>$(\n))$(\n)$(\h)endif /* __MODULE__$n__H_ */$(\n)))
topsort = $(shell $(if $(_topsort_error_fatal),set -eo pipefail;) echo $(foreach v,$1,$(foreach u,$(filter $1,$(call $2,$v)) $v,$v $u)) | $(TSORT) 2>&1 | awk -f $(ROOT_DIR)/mk/tsortdiag.awk | $(TAC))$(if $(_topsort_error_fatal),$(if $(findstring 0,$(findstring $(.SHELLSTATUS),0)),,$(info Error: stop after finding cycle(s))$(error Mybuild stop)))
_topsort_error_fatal = 

