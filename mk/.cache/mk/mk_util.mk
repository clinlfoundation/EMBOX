# Generated by GNU Make 4.2.1. Do not edit.

# CACHE_REQUIRES:
#   mk/.cache/mk/mk_core_def.mk
# CACHE_INCLUDES:
#   mk/util/wildcard.mk
#   mk/util/graph.mk
# MAKEFILE_LIST:
#   mk/.cache/mk/mk_core_def.mk
#   mk/core/common.mk
#   mk/core/alloc.mk
#   mk/core/common.mk
#   mk/core/define.mk
#   mk/core/string.mk
#   mk/util/var/assign.mk
#   mk/util/var/info.mk
#   mk/util/wildcard.mk
#   mk/core/common.mk
#   mk/core/string.mk
#   mk/util/graph.mk

ifneq ($(word 2,$(filter mk/.cache/mk/mk_util.mk,$(MAKEFILE_LIST))),)
$(error Multiple inclusion of 'mk/.cache/mk/mk_util.mk')
endif

include $(filter-out $(MAKEFILE_LIST),mk/core/common.mk)
include $(filter-out $(MAKEFILE_LIST),mk/.cache/mk/mk_core_def.mk)

# List of newly cached makefiles.
MAKEFILE_LIST += \
	mk/util/graph.mk \
	mk/util/wildcard.mk

# Transient variables.
__cache_transient := __def_tmp__ __def_inline_tmp__ __argsplit_tmp__ __argfold_tmp__ __def_tmp__ __def_inline_tmp__ __argsplit_tmp__ __argfold_tmp__

# Volatiles variables.
__alloc_cnt_c-def_aux := \
	.1
__def_done += \
	graph_closure \
	builtin_func-r-wildcard \
	f-wildcard \
	wildcard_relative_first \
	wildcard_relative \
	d-wildcard_first \
	__r_wildcard_double \
	wildcard_first \
	__wildcard_relative \
	__r_wildcard_double_loop \
	d-wildcard \
	d-wildcard_relative_first \
	__r_wildcard \
	f-wildcard_relative_first \
	d-wildcard_relative \
	f-wildcard_relative \
	f-wildcard_first \
	get_referenced_objects \
	__wildcard_first_fold \
	r-wildcard
__def_simples += \
	__cache_volatile_variable___def_simples \
	__util_wildcard_mk \
	__cache_volatile_variable___def_done \
	__util_graph_mk \
	__cache_volatile_variable___alloc_cnt_a-def_aux \
	__cache_volatile_variable___def_ignore \
	__cache_volatile_variable___def_value_providers

# New variables.
builtin_func-r-wildcard = $(builtin_to_function_inline)
d-wildcard = $(patsubst %/.,%,$(filter %/.,$(wildcard $(1:%=%/.))))
d-wildcard_first = $(call fold,,$1,__wildcard_first_fold,d-wildcard)
d-wildcard_relative = $(call __wildcard_relative,d-wildcard,$1,$2)
d-wildcard_relative_first = $(call __wildcard_relative,d-wildcard_first,$1,$2)
__def_aux1c = $(if $(filter $1,$2),$2,$1 $(foreach o,$(call $f,$1),$(call $0,$o,$2 $1)))
f-wildcard = $(filter-out $(call d-wildcard,$1),$(wildcard $1))
f-wildcard_first = $(call fold,,$1,__wildcard_first_fold,f-wildcard)
f-wildcard_relative = $(call __wildcard_relative,f-wildcard,$1,$2)
f-wildcard_relative_first = $(call __wildcard_relative,f-wildcard_first,$1,$2)
get_referenced_objects = $(foreach f,$(subst [],,$(subst .,,$(basename $($($1).fields:%=.%)))),$(foreach p,$(suffix $($1.$f)),$p))
graph_closure = $(foreach f,$(or $(if $(word 2,$2),,$(firstword $2)),$(error invalid argument in $0: '$2')),$(sort $(call __def_aux1c,$1,)))
r-wildcard = $(sort $(foreach p,$1,$(call __r_wildcard,$(subst **,* *,$p))))
__r_wildcard = $(if $(call singleword,$1), $(wildcard $1), $(if $(call doubleword,$1), $(foreach b,$(firstword $1), $(foreach e,$(word 2,$1), $(foreach d,$(if $(findstring /,$e), $(firstword $(subst /,/ ,$e)),*), $(__r_wildcard_double)))), $(error Handling more than one '**' tokens is not implemented)))
__r_wildcard_double = $(call __r_wildcard_double_loop,/, $(wildcard $b$(e:*%=%) $(if $(call eq,*/,$d),$b$(e:*/%=%))))
__r_wildcard_double_loop = $(if $2,$2 )$(if $(wildcard $b$1$d),$(call $0,$1*/,$(wildcard $b$1$e)))
__util_graph_mk := 1
__util_wildcard_mk := 1
wildcard_first = $(call fold,,$1,__wildcard_first_fold,wildcard)
__wildcard_first_fold = $(or $1,$(call $3,$2))
__wildcard_relative = $(foreach basedir,$(abspath $2) ,$(patsubst $(basedir)/%,%,$(call $1,$(3:%=$(basedir)/%))))
wildcard_relative = $(call __wildcard_relative,  wildcard,$1,$2)
wildcard_relative_first = $(call __wildcard_relative,  wildcard_first,$1,$2)

