# Generated by GNU Make 4.2.1. Do not edit.

# CACHE_REQUIRES:
#   mk/.cache/mk/mk_annotations_core.mk
#   mk/.cache/mk/mk_mybuild.mk
# CACHE_INCLUDES:
#   mk/mybuild/annotation_handlers/IfNeed.mk
#   mk/mybuild/annotation_handlers/ForBase.mk
#   mk/mybuild/annotation_handlers/DefaultImpl.mk
#   mk/mybuild/annotation_handlers/For.mk
#   mk/mybuild/annotation_handlers/TestsAnnotations.mk
# MAKEFILE_LIST:
#   mk/.cache/mk/mk_annotations_core.mk
#   mk/core/common.mk
#   mk/.cache/mk/mk_model.mk
#   mk/.cache/mk/mk_core_obj.mk
#   mk/.cache/mk/mk_core_def.mk
#   mk/core/alloc.mk
#   mk/core/common.mk
#   mk/core/define.mk
#   mk/core/string.mk
#   mk/util/var/assign.mk
#   mk/util/var/info.mk
#   mk/core/object.mk
#   mk/model/issue.mk
#   mk/model/linkage.mk
#   mk/model/metamodel.mk
#   mk/model/metamodel_impl.mk
#   mk/model/model.mk
#   mk/model/model_impl.mk
#   mk/model/resource.mk
#   mk/mybuild/annotations_core.mk
#   mk/.cache/mk/mk_mybuild.mk
#   mk/.cache/mk/mk_mybuild_myfile.mk
#   mk/.cache/mk/mk_gold_engine.mk
#   mk/gold/engine.mk
#   mk/mybuild/common-resource.mk
#   mk/mybuild/common-rules.mk
#   mk/mybuild/common-symbols.mk
#   mk/mybuild/myfile-linker.mk
#   mk/mybuild/myfile-metamodel.mk
#   mk/mybuild/myfile-model.mk
#   mk/mybuild/myfile-parser.mk
#   mk/mybuild/myfile-resource.mk
#   mk/mybuild/myfile-rules.mk
#   mk/mybuild/myfile-symbols.mk
#   mk/mybuild/myfile-tables.mk
#   mk/.cache/mk/mk_mybuild_configfile.mk
#   mk/mybuild/configfile-linker.mk
#   mk/mybuild/configfile-metamodel.mk
#   mk/mybuild/configfile-model.mk
#   mk/mybuild/configfile-parser.mk
#   mk/mybuild/configfile-resource.mk
#   mk/mybuild/configfile-rules.mk
#   mk/mybuild/configfile-symbols.mk
#   mk/mybuild/configfile-tables.mk
#   mk/.cache/mk/mk_mybuild_build.mk
#   mk/mybuild/build-metamodel.mk
#   mk/mybuild/build-model.mk
#   mk/mybuild/mybuild.mk
#   mk/mybuild/annotation_handlers/IfNeed.mk
#   mk/mybuild/annotation_handlers/ForBase.mk
#   mk/mybuild/annotation_handlers/DefaultImpl.mk
#   mk/mybuild/annotation_handlers/For.mk
#   mk/mybuild/annotation_handlers/ForBase.mk
#   mk/mybuild/annotation_handlers/TestsAnnotations.mk

ifneq ($(word 2,$(filter mk/.cache/mk/mk_annotations_handlers.mk,$(MAKEFILE_LIST))),)
$(error Multiple inclusion of 'mk/.cache/mk/mk_annotations_handlers.mk')
endif

include $(filter-out $(MAKEFILE_LIST),mk/core/common.mk)
include $(filter-out $(MAKEFILE_LIST),mk/.cache/mk/mk_annotations_core.mk)
include $(filter-out $(MAKEFILE_LIST),mk/.cache/mk/mk_mybuild.mk)

# List of newly cached makefiles.
MAKEFILE_LIST += \
	mk/mybuild/annotation_handlers/DefaultImpl.mk \
	mk/mybuild/annotation_handlers/For.mk \
	mk/mybuild/annotation_handlers/ForBase.mk \
	mk/mybuild/annotation_handlers/IfNeed.mk \
	mk/mybuild/annotation_handlers/TestsAnnotations.mk

# Transient variables.
__cache_transient := __def_tmp__ __def_inline_tmp__ __argsplit_tmp__ __argfold_tmp__ __def_tmp__ __def_inline_tmp__ __argsplit_tmp__ __argfold_tmp__

# Volatiles variables.
__def_done += \
	annotation_handler_init \
	mk/mybuild/annotation_handlers/IfNeed.mk \
	class-ForBaseAnnotationCallback \
	class-IfNeedAnnotationCallback \
	mk/mybuild/annotation_handlers/DefaultImpl.mk \
	class-DefaultImplAnnotationCallback \
	class-ForAnnotationCallback \
	mk/mybuild/annotation_handlers/For.mk \
	mk/mybuild/annotation_handlers/TestsAnnotations.mk \
	class-WithTestAnnotationCallback \
	class-WithAllTestsAnnotationCallback \
	class-TestForAnnotationCallback
__def_ignore += \
	ForBaseAnnotationCallback \
	ForBaseAnnotationCallback.% \
	IfNeedAnnotationCallback \
	IfNeedAnnotationCallback.% \
	DefaultImplAnnotationCallback \
	DefaultImplAnnotationCallback.% \
	ForAnnotationCallback \
	ForAnnotationCallback.% \
	WithTestAnnotationCallback \
	WithTestAnnotationCallback.% \
	WithAllTestsAnnotationCallback \
	WithAllTestsAnnotationCallback.% \
	TestForAnnotationCallback \
	TestForAnnotationCallback.%
__def_simples += \
	__mk_annotations_handler_for_base_mk \
	__cache_volatile_variable___alloc_cnt_i-def_aux \
	__cache_volatile_variable___alloc_cnt_ac-def_aux \
	__alloc_cnt_i-def_aux \
	__alloc_cnt_ac-def_aux \
	__mk_annotations_handler_ifneed_mk \
	__mk_annotations_handler_default_impl_mk \
	__mk_annotations_handler_for_mk \
	__mk_annotations_handler_test_for_mk

# New variables.
DefaultImplAnnotationCallback.BuildCallback = $(foreach this,$(__this),$(foreach abstract,$(foreach __this,$(this),$(call $($(__this)).target.getter)),$(foreach defaultImpl,$(value $(this).options.value),$(if $(foreach __this,$(suffix $(1)),$(call $($(__this)).getRecommendation,$(abstract))),,$(foreach __this,$(suffix $(1)),$(call $($(__this)).addRecommendationRule,$(abstract),$(defaultImpl))))$(abstract))))
DefaultImplAnnotationCallback.MyLinkCallback = $(foreach this,$(__this),$(if $(foreach __this,$(suffix $(MyFile_ModuleType)),$(call $($(__this)).isInstance,$(foreach __this,$(this),$(call $($(__this)).target.getter)))),,$(call __assert_handle_failure,class-DefaultImplAnnotationCallback,$$(foreach __this,$$(suffix $$(MyFile_ModuleType)),$$(call $$($$(__this)).isInstance,$$(foreach __this,$$(this),$$(call $$($$(__this)).target.getter))))))$(if $(foreach __this,$(suffix $(foreach __this,$(this),$(call $($(__this)).target.getter))),$(call $($(__this)).isAbstract.getter)),,$(call __assert_handle_failure,class-DefaultImplAnnotationCallback,$$(foreach __this,$$(suffix $$(foreach __this,$$(this),$$(call $$($$(__this)).target.getter))),$$(call $$($$(__this)).isAbstract.getter))))$(if $(value $(this).options.value),,$(call __assert_handle_failure,class-DefaultImplAnnotationCallback,$$(value $$(this).options.value)))$(foreach abstract,$(foreach __this,$(this),$(call $($(__this)).target.getter)),$(foreach defaultImpl,$(value $(this).options.value),$(if $(foreach __this,$(suffix $(defaultImpl)),$(call $($(__this)).isSubTypeOf,$(abstract))),$(abstract),$(foreach __this,$(suffix $(1)),$(call $($(__this)).addIssues,$(foreach __class__,$(call __class_resolve,BaseIssue),$(call __new,$1,error,$(foreach __this,$(suffix $(foreach __this,$(this),$(call $($(__this)).target.getter))),$(call $($(__this)).origin.getter)),DefaultImpl annotation value should be subtype of target and))))))))
DefaultImplAnnotationCallback.annotationType.getter = $($(__this).annotationType)
DefaultImplAnnotationCallback.annotationType.setter = $(call __field_set$2,annotationType,$1)
DefaultImplAnnotationCallback.callback = $(foreach this,$(__this),$(foreach __this,$(this),$(call $($(__this)).$1Callback,$(value 2))))
DefaultImplAnnotationCallback.fields := annotationType target
DefaultImplAnnotationCallback.maps := options
DefaultImplAnnotationCallback.methods := BuildCallback MyLinkCallback callback BuildCallback MyLinkCallback
DefaultImplAnnotationCallback.properties := annotationType target
DefaultImplAnnotationCallback.raw_list_fields := 
DefaultImplAnnotationCallback.raw_list_maps := 
DefaultImplAnnotationCallback.raw_scalar_fields := annotationType target
DefaultImplAnnotationCallback.raw_scalar_maps := options
DefaultImplAnnotationCallback.reference_list_fields := 
DefaultImplAnnotationCallback.reference_list_maps := 
DefaultImplAnnotationCallback.reference_scalar_fields := 
DefaultImplAnnotationCallback.reference_scalar_maps := 
DefaultImplAnnotationCallback.supers := AnnotationCallback
DefaultImplAnnotationCallback.target.getter = $($(__this).target)
DefaultImplAnnotationCallback.target.setter = $(call __field_set$2,target,$1)
DefaultImplAnnotationCallback := $(\0) super/AnnotationCallback method/MyLinkCallback method/BuildCallback
ForAnnotationCallback.BuildCallback = $(foreach this,$(__this),$(foreach __this,$(this),$(call $($(__this)).checkAnnotationForParent,$1)))
ForAnnotationCallback.MyLinkCallback = $(error Invoking unimplemented abstract method __def_aux26b, declared in class AnnotationCallback)
ForAnnotationCallback.annotationType.getter = $($(__this).annotationType)
ForAnnotationCallback.annotationType.setter = $(call __field_set$2,annotationType,$1)
ForAnnotationCallback.callback = $(foreach this,$(__this),$(foreach __this,$(this),$(call $($(__this)).$1Callback,$(value 2))))
ForAnnotationCallback.checkAnnotationForParent = $(foreach this,$(__this),$(if $(foreach __this,$(suffix $(ConfigFile_Include)),$(call $($(__this)).isInstance,$(foreach __this,$(this),$(call $($(__this)).target.getter)))),,$(call __assert_handle_failure,class-ForBaseAnnotationCallback,$$(foreach __this,$$(suffix $$(ConfigFile_Include)),$$(call $$($$(__this)).isInstance,$$(foreach __this,$$(this),$$(call $$($$(__this)).target.getter))))))$(if $(value $(this).options.value),,$(call __assert_handle_failure,class-ForBaseAnnotationCallback,$$(value $$(this).options.value)))$(foreach parent,$(value $(this).options.value),$(foreach include,$(foreach __this,$(this),$(call $($(__this)).target.getter)),$(foreach mybuild,$1,$(if $(foreach __this,$(suffix $(parent)),$(call $($(__this)).isSuperTypeOf,$(foreach __this,$(suffix $(include)),$(call $($(__this)).module.getter)))),$(include),$(foreach __this,$(suffix $(mybuild)),$(call $($(__this)).addIssueInclude,$(include),error,Annotation $(foreach __this,$(suffix $(foreach __this,$(this),$(call $($(__this)).annotationType.getter))),$(call $($(__this)).qualifiedName.getter)) value should be target's parent)))))))
ForAnnotationCallback.fields := annotationType target
ForAnnotationCallback.maps := options
ForAnnotationCallback.methods := BuildCallback callback checkAnnotationForParent BuildCallback MyLinkCallback
ForAnnotationCallback.properties := annotationType target
ForAnnotationCallback.raw_list_fields := 
ForAnnotationCallback.raw_list_maps := 
ForAnnotationCallback.raw_scalar_fields := annotationType target
ForAnnotationCallback.raw_scalar_maps := options
ForAnnotationCallback.reference_list_fields := 
ForAnnotationCallback.reference_list_maps := 
ForAnnotationCallback.reference_scalar_fields := 
ForAnnotationCallback.reference_scalar_maps := 
ForAnnotationCallback.supers := AnnotationCallback ForBaseAnnotationCallback
ForAnnotationCallback.target.getter = $($(__this).target)
ForAnnotationCallback.target.setter = $(call __field_set$2,target,$1)
ForAnnotationCallback := $(\0) super/ForBaseAnnotationCallback method/BuildCallback
ForBaseAnnotationCallback.BuildCallback = $(error Invoking unimplemented abstract method __def_aux26b, declared in class AnnotationCallback)
ForBaseAnnotationCallback.MyLinkCallback = $(error Invoking unimplemented abstract method __def_aux26b, declared in class AnnotationCallback)
ForBaseAnnotationCallback.annotationType.getter = $($(__this).annotationType)
ForBaseAnnotationCallback.annotationType.setter = $(call __field_set$2,annotationType,$1)
ForBaseAnnotationCallback.callback = $(foreach this,$(__this),$(foreach __this,$(this),$(call $($(__this)).$1Callback,$(value 2))))
ForBaseAnnotationCallback.checkAnnotationForParent = $(foreach this,$(__this),$(if $(foreach __this,$(suffix $(ConfigFile_Include)),$(call $($(__this)).isInstance,$(foreach __this,$(this),$(call $($(__this)).target.getter)))),,$(call __assert_handle_failure,class-ForBaseAnnotationCallback,$$(foreach __this,$$(suffix $$(ConfigFile_Include)),$$(call $$($$(__this)).isInstance,$$(foreach __this,$$(this),$$(call $$($$(__this)).target.getter))))))$(if $(value $(this).options.value),,$(call __assert_handle_failure,class-ForBaseAnnotationCallback,$$(value $$(this).options.value)))$(foreach parent,$(value $(this).options.value),$(foreach include,$(foreach __this,$(this),$(call $($(__this)).target.getter)),$(foreach mybuild,$1,$(if $(foreach __this,$(suffix $(parent)),$(call $($(__this)).isSuperTypeOf,$(foreach __this,$(suffix $(include)),$(call $($(__this)).module.getter)))),$(include),$(foreach __this,$(suffix $(mybuild)),$(call $($(__this)).addIssueInclude,$(include),error,Annotation $(foreach __this,$(suffix $(foreach __this,$(this),$(call $($(__this)).annotationType.getter))),$(call $($(__this)).qualifiedName.getter)) value should be target's parent)))))))
ForBaseAnnotationCallback.fields := annotationType target
ForBaseAnnotationCallback.maps := options
ForBaseAnnotationCallback.methods := callback checkAnnotationForParent BuildCallback MyLinkCallback
ForBaseAnnotationCallback.properties := annotationType target
ForBaseAnnotationCallback.raw_list_fields := 
ForBaseAnnotationCallback.raw_list_maps := 
ForBaseAnnotationCallback.raw_scalar_fields := annotationType target
ForBaseAnnotationCallback.raw_scalar_maps := options
ForBaseAnnotationCallback.reference_list_fields := 
ForBaseAnnotationCallback.reference_list_maps := 
ForBaseAnnotationCallback.reference_scalar_fields := 
ForBaseAnnotationCallback.reference_scalar_maps := 
ForBaseAnnotationCallback.supers := AnnotationCallback
ForBaseAnnotationCallback.target.getter = $($(__this).target)
ForBaseAnnotationCallback.target.setter = $(call __field_set$2,target,$1)
ForBaseAnnotationCallback := $(\0) super/AnnotationCallback method/checkAnnotationForParent
IfNeedAnnotationCallback.BuildCallback = $(foreach this,$(__this),$(if $(foreach __this,$(this),$(call $($(__this)).checkAnnotationForParent,$1)),$(foreach __this,$(suffix $(1)),$(call $($(__this)).addRecommendationRule,$(value $(this).options.value),$(foreach __this,$(suffix $(foreach __this,$(this),$(call $($(__this)).target.getter))),$(call $($(__this)).module.getter))))))
IfNeedAnnotationCallback.MyLinkCallback = $(error Invoking unimplemented abstract method __def_aux26b, declared in class AnnotationCallback)
IfNeedAnnotationCallback.annotationType.getter = $($(__this).annotationType)
IfNeedAnnotationCallback.annotationType.setter = $(call __field_set$2,annotationType,$1)
IfNeedAnnotationCallback.callback = $(foreach this,$(__this),$(foreach __this,$(this),$(call $($(__this)).$1Callback,$(value 2))))
IfNeedAnnotationCallback.checkAnnotationForParent = $(foreach this,$(__this),$(if $(foreach __this,$(suffix $(ConfigFile_Include)),$(call $($(__this)).isInstance,$(foreach __this,$(this),$(call $($(__this)).target.getter)))),,$(call __assert_handle_failure,class-ForBaseAnnotationCallback,$$(foreach __this,$$(suffix $$(ConfigFile_Include)),$$(call $$($$(__this)).isInstance,$$(foreach __this,$$(this),$$(call $$($$(__this)).target.getter))))))$(if $(value $(this).options.value),,$(call __assert_handle_failure,class-ForBaseAnnotationCallback,$$(value $$(this).options.value)))$(foreach parent,$(value $(this).options.value),$(foreach include,$(foreach __this,$(this),$(call $($(__this)).target.getter)),$(foreach mybuild,$1,$(if $(foreach __this,$(suffix $(parent)),$(call $($(__this)).isSuperTypeOf,$(foreach __this,$(suffix $(include)),$(call $($(__this)).module.getter)))),$(include),$(foreach __this,$(suffix $(mybuild)),$(call $($(__this)).addIssueInclude,$(include),error,Annotation $(foreach __this,$(suffix $(foreach __this,$(this),$(call $($(__this)).annotationType.getter))),$(call $($(__this)).qualifiedName.getter)) value should be target's parent)))))))
IfNeedAnnotationCallback.fields := annotationType target
IfNeedAnnotationCallback.maps := options
IfNeedAnnotationCallback.methods := BuildCallback callback checkAnnotationForParent BuildCallback MyLinkCallback
IfNeedAnnotationCallback.properties := annotationType target
IfNeedAnnotationCallback.raw_list_fields := 
IfNeedAnnotationCallback.raw_list_maps := 
IfNeedAnnotationCallback.raw_scalar_fields := annotationType target
IfNeedAnnotationCallback.raw_scalar_maps := options
IfNeedAnnotationCallback.reference_list_fields := 
IfNeedAnnotationCallback.reference_list_maps := 
IfNeedAnnotationCallback.reference_scalar_fields := 
IfNeedAnnotationCallback.reference_scalar_maps := 
IfNeedAnnotationCallback.supers := AnnotationCallback ForBaseAnnotationCallback
IfNeedAnnotationCallback.target.getter = $($(__this).target)
IfNeedAnnotationCallback.target.setter = $(call __field_set$2,target,$1)
IfNeedAnnotationCallback := $(\0) super/ForBaseAnnotationCallback method/BuildCallback
TestForAnnotationCallback.BuildCallback = $(foreach this,$(__this),$(foreach targetInstance,$(foreach __this,$(suffix $(1)),$(call $($(__this)).includeModule,$(value $(this).options.value))),$(foreach thisInstance,$(foreach __this,$(suffix $(1)),$(call $($(__this)).moduleInstance,$(foreach __this,$(this),$(call $($(__this)).target.getter)))),$(foreach __this,$(suffix $(targetInstance)),$(call $($(__this)).afterDepends.setter,$(thisInstance),*))))$(foreach __this,$(this),$(call $($(__this)).target.getter)))
TestForAnnotationCallback.MyLinkCallback = $(foreach this,$(__this),$(foreach __this,$(suffix $(value $(this).options.value)),$(call __map_set+,customStorage,tests,$(foreach __this,$(this),$(call $($(__this)).target.getter)))))
TestForAnnotationCallback.annotationType.getter = $($(__this).annotationType)
TestForAnnotationCallback.annotationType.setter = $(call __field_set$2,annotationType,$1)
TestForAnnotationCallback.callback = $(foreach this,$(__this),$(foreach __this,$(this),$(call $($(__this)).$1Callback,$(value 2))))
TestForAnnotationCallback.fields := annotationType target
TestForAnnotationCallback.maps := options
TestForAnnotationCallback.methods := BuildCallback MyLinkCallback callback BuildCallback MyLinkCallback
TestForAnnotationCallback.properties := annotationType target
TestForAnnotationCallback.raw_list_fields := 
TestForAnnotationCallback.raw_list_maps := 
TestForAnnotationCallback.raw_scalar_fields := annotationType target
TestForAnnotationCallback.raw_scalar_maps := options
TestForAnnotationCallback.reference_list_fields := 
TestForAnnotationCallback.reference_list_maps := 
TestForAnnotationCallback.reference_scalar_fields := 
TestForAnnotationCallback.reference_scalar_maps := 
TestForAnnotationCallback.supers := AnnotationCallback
TestForAnnotationCallback.target.getter = $($(__this).target)
TestForAnnotationCallback.target.setter = $(call __field_set$2,target,$1)
TestForAnnotationCallback := $(\0) super/AnnotationCallback method/MyLinkCallback method/BuildCallback
WithAllTestsAnnotationCallback.BuildCallback = $(foreach this,$(__this),$(foreach include,$(foreach __this,$(this),$(call $($(__this)).target.getter)),$(foreach mod,$(foreach __this,$(suffix $(foreach __this,$(this),$(call $($(__this)).target.getter))),$(call $($(__this)).module.getter)),$(foreach test,$(value $(suffix $(mod)).customStorage.tests),$(foreach __this,$(suffix $(include)),$(call $($(__this)).module.setter,$(test),+)))))$(foreach __this,$(this),$(call $($(__this)).target.getter)))
WithAllTestsAnnotationCallback.MyLinkCallback = $(error Invoking unimplemented abstract method __def_aux26b, declared in class AnnotationCallback)
WithAllTestsAnnotationCallback.annotationType.getter = $($(__this).annotationType)
WithAllTestsAnnotationCallback.annotationType.setter = $(call __field_set$2,annotationType,$1)
WithAllTestsAnnotationCallback.callback = $(foreach this,$(__this),$(foreach __this,$(this),$(call $($(__this)).$1Callback,$(value 2))))
WithAllTestsAnnotationCallback.fields := annotationType target
WithAllTestsAnnotationCallback.maps := options
WithAllTestsAnnotationCallback.methods := BuildCallback callback BuildCallback MyLinkCallback
WithAllTestsAnnotationCallback.properties := annotationType target
WithAllTestsAnnotationCallback.raw_list_fields := 
WithAllTestsAnnotationCallback.raw_list_maps := 
WithAllTestsAnnotationCallback.raw_scalar_fields := annotationType target
WithAllTestsAnnotationCallback.raw_scalar_maps := options
WithAllTestsAnnotationCallback.reference_list_fields := 
WithAllTestsAnnotationCallback.reference_list_maps := 
WithAllTestsAnnotationCallback.reference_scalar_fields := 
WithAllTestsAnnotationCallback.reference_scalar_maps := 
WithAllTestsAnnotationCallback.supers := AnnotationCallback
WithAllTestsAnnotationCallback.target.getter = $($(__this).target)
WithAllTestsAnnotationCallback.target.setter = $(call __field_set$2,target,$1)
WithAllTestsAnnotationCallback := $(\0) super/AnnotationCallback method/BuildCallback
WithTestAnnotationCallback.BuildCallback = $(foreach this,$(__this),$(foreach include,$(foreach __this,$(this),$(call $($(__this)).target.getter)),$(foreach test,$(value $(this).options.value),$(foreach mod,$(foreach __this,$(suffix $(foreach __this,$(this),$(call $($(__this)).target.getter))),$(call $($(__this)).module.getter)),$(if $(filter $(test),$(value $(suffix $(mod)).customStorage.tests)),$(foreach __this,$(suffix $(include)),$(call $($(__this)).module.setter,$(test),+)),$(foreach __this,$(suffix $(1)),$(call $($(__this)).addIssueInclude,$(foreach __this,$(this),$(call $($(__this)).target.getter)),error,$(foreach __this,$(suffix $(test)),$(call $($(__this)).qualifiedName.getter)) is not $(foreach __this,$(suffix $(mod)),$(call $($(__this)).qualifiedName.getter)) test))))))$(foreach __this,$(this),$(call $($(__this)).target.getter)))
WithTestAnnotationCallback.MyLinkCallback = $(error Invoking unimplemented abstract method __def_aux26b, declared in class AnnotationCallback)
WithTestAnnotationCallback.annotationType.getter = $($(__this).annotationType)
WithTestAnnotationCallback.annotationType.setter = $(call __field_set$2,annotationType,$1)
WithTestAnnotationCallback.callback = $(foreach this,$(__this),$(foreach __this,$(this),$(call $($(__this)).$1Callback,$(value 2))))
WithTestAnnotationCallback.fields := annotationType target
WithTestAnnotationCallback.maps := options
WithTestAnnotationCallback.methods := BuildCallback callback BuildCallback MyLinkCallback
WithTestAnnotationCallback.properties := annotationType target
WithTestAnnotationCallback.raw_list_fields := 
WithTestAnnotationCallback.raw_list_maps := 
WithTestAnnotationCallback.raw_scalar_fields := annotationType target
WithTestAnnotationCallback.raw_scalar_maps := options
WithTestAnnotationCallback.reference_list_fields := 
WithTestAnnotationCallback.reference_list_maps := 
WithTestAnnotationCallback.reference_scalar_fields := 
WithTestAnnotationCallback.reference_scalar_maps := 
WithTestAnnotationCallback.supers := AnnotationCallback
WithTestAnnotationCallback.target.getter = $($(__this).target)
WithTestAnnotationCallback.target.setter = $(call __field_set$2,target,$1)
WithTestAnnotationCallback := $(\0) super/AnnotationCallback method/BuildCallback
class-DefaultImplAnnotationCallback = $(call class-AnnotationCallback)$(\0) 
class-ForAnnotationCallback = $(call class-ForBaseAnnotationCallback)$(\0) 
class-ForBaseAnnotationCallback = $(call class-AnnotationCallback)$(\0) 
class-IfNeedAnnotationCallback = $(call class-ForBaseAnnotationCallback)$(\0) 
class-TestForAnnotationCallback = $(call class-AnnotationCallback)$(\0) 
class-WithAllTestsAnnotationCallback = $(call class-AnnotationCallback)$(\0) 
class-WithTestAnnotationCallback = $(call class-AnnotationCallback)$(\0) 
mk/mybuild/annotation_handlers/DefaultImpl.mk = $(foreach context,Build MyLink,$(foreach __this,$(suffix $(1)),$(call $($(__this)).addSupported,$(context),mybuild.lang.DefaultImpl,DefaultImplAnnotationCallback)))
mk/mybuild/annotation_handlers/For.mk = $(foreach __this,$(suffix $(1)),$(call $($(__this)).addSupported,Build,mybuild.lang.For,ForAnnotationCallback))
mk/mybuild/annotation_handlers/IfNeed.mk = $(foreach __this,$(suffix $(1)),$(call $($(__this)).addSupported,Build,mybuild.lang.IfNeed,IfNeedAnnotationCallback))
mk/mybuild/annotation_handlers/TestsAnnotations.mk = $(foreach context,MyLink Build,$(foreach __this,$(suffix $(1)),$(call $($(__this)).addSupported,$(context),mybuild.lang.TestFor,TestForAnnotationCallback)))$(foreach __this,$(suffix $(1)),$(call $($(__this)).addSupported,Build,mybuild.lang.WithTest,WithTestAnnotationCallback))
__mk_annotations_handler_default_impl_mk := 1
__mk_annotations_handler_for_base_mk := 1
__mk_annotations_handler_for_mk := 1
__mk_annotations_handler_ifneed_mk := 1
__mk_annotations_handler_test_for_mk := 1

