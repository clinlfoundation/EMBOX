package third_party.lib

@Build(script="$(EXTERNAL_MAKE)")
@BuildArtifactPath(cppflags="-I$(EXTERNAL_BUILD_DIR)/third_party/lib/opencv/opencv-4.0.1/modules/core/include/")
@BuildArtifactPath(cppflags="-I$(EXTERNAL_BUILD_DIR)/third_party/lib/opencv/opencv-4.0.1/modules/imgproc/include/")
@BuildArtifactPath(cppflags="-I$(EXTERNAL_BUILD_DIR)/third_party/lib/opencv/opencv-4.0.1/modules/highgui/include/")
@BuildArtifactPath(cppflags="-I$(EXTERNAL_BUILD_DIR)/third_party/lib/opencv/opencv-4.0.1/modules/imgcodecs/include/")
@BuildArtifactPath(cppflags="-I$(EXTERNAL_BUILD_DIR)/third_party/lib/opencv/build/")
@BuildDepends(third_party.gcc.libstdcxx)
@BuildDepends(third_party.gcc.libsupcxx)
static module opencv {
	source "^BUILD/extbld/^MOD_PATH/install/libopencv_core.a"
	source "^BUILD/extbld/^MOD_PATH/install/libopencv_imgcodecs.a"
	source "^BUILD/extbld/^MOD_PATH/install/libopencv_imgproc.a"
	source "^BUILD/extbld/^MOD_PATH/install/liblibpng.a"
	source "^BUILD/extbld/^MOD_PATH/install/libzlib.a"

	depends embox.compat.posix.proc.atexit_api
	depends embox.compat.posix.util.gettimeofday
	depends embox.compat.atomic.pseudo_atomic
	depends embox.compat.libc.math
	@NoRuntime depends embox.compat.posix.sys.mman.mmap_api // include sys/mman.h
	@NoRuntime depends embox.compat.libc.all
	@NoRuntime depends embox.compat.posix.pthread_key
	@NoRuntime depends third_party.gcc.libstdcxx
	@NoRuntime depends third_party.gcc.libsupcxx
}
